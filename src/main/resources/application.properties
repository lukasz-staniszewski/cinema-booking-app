server.port=8081
spring.datasource.url=jdbc:postgresql://localhost:5431/pis-db
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation= true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto=update
#logging.level.org.springframework.web.filter.CommonsRequestLoggingFilter=DEBUG
spring.output.ansi.enabled=always

# Email conformation sending
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=hubertwistowski@gmail.com
spring.mail.password=hubertwistowski126

spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true

application.jwt.secretKey=balbinkabalbinkabalbinkabalbinkabalbinkabalbinka
application.jwt.tokenPrefix=Bearer 
application.jwt.tokenExpirationAfterDays=14

# Logging

# output to a file
logging.file.name=app.log

# temp folder example
#logging.file=${java.io.tmpdir}/app.log

logging.pattern.file=%d %p %c{1.} [%t] %m%n

logging.pattern.console=%d{HH:mm:ss.SSS} [%t] %-5level %logger{36}

# root level
logging.level.root=ERROR


# logging level registration
logging.level.com.thaichicken.cinemabooking.registration.RegistrationController = INFO

# loggin level controllers
logging.level.com.thaichicken.cinemabooking.controller = INFO